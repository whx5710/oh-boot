# Tomcat
server:
  tomcat:
    uri-encoding: UTF-8
    threads:
      max: 1000
      min-spare: 30
  port: 8080
  servlet:
    context-path: /
    session:
      cookie:
        http-only: true
iris:
  xss:
    enabled: true
    exclude-urls:
      - /oh-generator/**
  security:
    access-token-expire: 43200      # 过期时间，12小时过期
    refresh-token-expire: 1209600   # 14天过期
    auth-count: 5                   # 多少次鉴权失败锁定，0表示不开启
    lock-time: 3600                 # 账号锁定时间(秒)
    ignore-urls:                    # 忽略鉴权的url
      - /actuator/**
      - /v3/api-docs/**
      - /webjars/**
      - /swagger/**
      - /swagger-resources/**
      - /swagger-ui.html
      - /swagger-ui/**
      - /doc.html
      - /upload/**
      - /druid/**
  open-api:
    type: 2 # 1直接保存 2使用MQ异步保存
    auto-start-up: false # Kafka监听是否开启
  # 文件存储相关
  storage:
    enabled: true
    config:
      type: local  # 存储类型：local、aliyun、tencent、qiniu、huawei、minio
      domain: http://localhost:8080
    local:
      path: /data/图片/upload
# https://docs.spring.io/spring-boot/docs/current/reference/html/application-properties.html
spring:
  servlet:
    multipart:
      max-file-size: 1024MB
      max-request-size: 1024MB
  data:
    redis:
      database: 0
      host: 127.0.0.1
      port: 6379
      #password:
      timeout: 10s  # 连接超时时间
      # 是否开启 SSL
      ssl:
        enabled: false
  datasource:
    druid:
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        login-username: admin
        login-password: admin # 正式环境需配置复杂密码
      web-stat-filter: # Druid Web统计过滤器配置
        enabled: true # 启用Web统计过滤器
        session-stat-enable: true # 启用会话统计功能
        session-stat-max-count: 1000 # 最大会话统计数量
    sys-data-source:
      enable: true # 系统数据源(sysDb)是否开启，默认不开启
      primary: masterDb #设置默认的数据源或者数据源组,默认值即为masterDb
      prefix-uris: # 通过请求的uri前缀切换到系统内部数据源，此处如果有过滤路径，则必须配置 sysDb 数据源
        - /sys/
        - /sms/
        - /schedule/
    dynamic:
      sysDb:
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://127.0.0.1:3306/oh-sys?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&nullCatalogMeansCurrent=true
        username: root
        password: 123456
        initialSize: 10
        minIdle: 10
        maxActive: 100
        filters: wall,stat
        connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
      masterDb:
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://127.0.0.1:3306/oh-boot?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&nullCatalogMeansCurrent=true
        username: root
        password: 123456
        initialSize: 10
        minIdle: 10
        maxActive: 120
        filters: wall,stat
        connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=1000
  kafka:
    bootstrap-servers: 127.0.0.1:9092
    client-id: dc-device-flow-analyze
    listener:
      ack-mode: MANUAL_IMMEDIATE
      concurrency: 1  # 多任务
      # type: BATCH #开启批量监听
    consumer:
      group-id: oh-group
      max-poll-records: 10
      auto-offset-reset: earliest  # Kafka中没有初始偏移或如果当前偏移在服务器上不再存在时,默认区最新 ，有三个选项 【latest, earliest, none】
      enable-auto-commit: false    # 是否开启自动提交
      auto-commit-interval: 1000   # 自动提交的时间间隔
      key-serializer: org.apache.kafka.common.serialization.StringDeserializer
      value-serializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      # 0：producer 不等待 broker 的 ack
      # 1：producer 等待 broker 的 ack，partition 的 leader 落盘成功后返回 ack，如果在 follower 同步成功之前 leader 故障，那么将会丢失数据
      # -1（all）：producer 等待 broker 的 ack，partition 的 leader 和 follower （ISRL里的follower，不是全部的follower）全部落盘成功后才 返回 ack
      acks: 1
      batch-size: 4096
      buffer-memory: 40960000
      client-id: dc-device-flow-analyze-producer
      compression-type: zstd # 压缩算法
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      retries: 3 # 重复次数
      properties:
        spring.json.add.type.headers: false
        max.request.size: 126951500
        max.block.ms: 30000 # 最大阻塞时间默认60000ms
# 接口文档
knife4j:
  enable: true  # 开启增强配置
  # 是否生产环境，生产环境屏蔽，开发环境需显示接口文档
  # production: true
  setting:
    custom-code: 500
    enable-footer-custom: false
# 工作流配置 https://docs.camunda.org/manual/latest/user-guide/spring-boot-integration/configuration/
camunda.bpm:
  #enabled: false # Switch to disable the Camunda auto-configuration. Use to exclude Camunda in integration tests.
  process-engine-name: OH工作流   # Name of the process engine
  auto-deployment-enabled: false # 自动部署 resources 下的 bpmn文件
  database:
    type: mysql
    schema-update: true
  generic-properties.properties:
    javaSerializationFormatEnabled: true
    history: full # 历史记录级别设置
    historyTimeToLive: P1000D # 历史数据保存时间 1000天
    # 批量清理运行时间窗口：设置在每天20：00-22：00
    # historyCleanupBatchWindowStartTime: "20:00"
    # historyCleanupBatchWindowEndTime: "22:00"
    # 批量清理运行时间窗口：设置在周日19：00-23：00
    sundayHistoryCleanupBatchWindowStartTime: "19:00"
    sundayHistoryCleanupBatchWindowEndTime: "23:00"
    historyCleanupDegreeOfParallelism: 4 # 用于历史清理的并行作业数
    historyCleanupBatchSize: 100 # 单次批量处理实例数
  admin-user:
    id: admin
    password: 123456
  # 定时任务
  job-execution:
    enabled: true # 如果设置为 false，则根本不会创建任何 JobExecutor bean。可以用于测试目的
  run:
    # https://docs.camunda.org/manual/latest/user-guide/camunda-bpm-run/#cross-origin-resource-sharing
    cors:
      enabled: true
      allowed-origins: "*"
  filter:
    create: 所有任务
# 日志信息
logging:
  # 字符集设置
  charset:
    file: UTF-8
    console: UTF-8
  level:  # 默认的全局日志级别 TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF
    com.iris: DEBUG
    # root: DEBUG
    org.springframework.web: debug # web相关的日志级别
  pattern:
    # 在控制台输出的日志格式
    # 无颜色 '%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{50} - %msg%n'
    # 有颜色 '%red(%d{yyyy-MM-dd HH:mm:ss.SSS}) %highlight(%-5level) %green([%thread]) %boldMagenta(%logger{50}) - %msg%n'
    console: '%highlight(%d{yyyy-MM-dd HH:mm:ss.SSS}) %highlight(%-5level) %green([%thread]) %boldMagenta(%logger{50}) - %msg%n'
  file:
    # 日志存放的路径 path和 file这2个属性，只需要配置其中之一即可，如果同时配置，则使用logging.file属性
    # path: logs
    name: logs/${spring.application.name}.out.log
  logback:
    rollingpolicy:
      clean-history-on-start: true                        # 是否在启动时清除存档日志文件
      file-name-pattern: ${LOG_FILE}.%d{yyyy-MM-dd}.%i.gz # 滚动日志文件名的模式
      max-history: 10                                     # 要保留的存档日志文件的最大数量
      max-file-size: 100MB                                # 最大文件大小，默认10MB
