##############################################################################
# 1、每个环境有对应的配置，请规范使用每个环境配置;比如开发环境需要访问swagger接口文档，但在正式环境需要屏蔽
# 2、如果使用nacos配置中心，建议将本地环境 “dev|test|prod” 配置屏蔽，防止使用过程中混淆;使用本地配置，屏蔽下面nacos配置即可
#    nacos启动命令（单机模式）：
#      linux:   sh startup.sh -m standalone 或 bash startup.sh -m standalone
#      windows: startup.cmd -m standalone
#    nacos关闭命令：sh shutdown.sh   或   shutdown.cmd
# https://docs.spring.io/spring-boot/docs/current/reference/html/application-properties.html
##############################################################################
spring:
  # 环境 dev|test|prod
  profiles:
    active: dev
  application:
    name: oh-boot

# nacos相关配置
nacos:
  config:
    # nacos会根据配置怎么找到对应的配置文件规则：prefix−{spring.profile.active}.${file-extension}
    # spring.profiles.active 为空时，对应的连接符 - 也将不存在，，dataId 的拼接格式变成 ${prefix}.${file-extension}
    bootstrap:
      #开启系统启动时预读取nacos的配置，用于满足@Value注入数据的场景
      enable: true
    #配置所属命名空间的id,此处我们配置名称为dev的id，可以在命名空间列表查看id的值
    namespace: 3b00ce0d-eca1-4ef0-a764-199212d930ac
    # 配置文件的前缀,默认为 spring.application.name 的值
    prefix: iris
    # 配置所属分组
    group: dev
    # 配置ID
    data-id: iris-dev.yaml
    # 配置文件类型,对应nacos配置页面的配置格式，默认是properties
    type: yaml
    # nacos服务器地址
    server-addr: localhost:8848
    # 开启自动刷新nacos配置
    auto-refresh: true
    # 针对配置项同名的情况，是否允许nacos的配置覆盖本地的配置
    remote-first: true